import java.util.Random;
import java.util.*;
import java.io.*;

public class Solution{
	static List<String> solutions = new ArrayList<String>();
	static String[] dictionary;
	static int score=0;
	public static void main(String args[]) throws FileNotFoundException{

		//Scans dictionary.txt file from a text file inside the src file
		Scanner dict = new Scanner(new FileReader("dictionary.txt"));
		Scanner scan = new Scanner(System.in);
		Random ran = new Random();

		//Fills solutions with strings from dictionary file
		while(dict.hasNext())
			solutions.add(dict.nextLine());
		System.out.println("Press E to enter letters OR R to Generate random letters");
		String type = scan.nextLine();


		String input ="";
		
		if(type.length()> 1){
			System.out.println("ERROR:");
			
		}else if (type.equals("r")){
			char c;
			for(int i=0; i <16; i++)
			{
				c = (char)(ran.nextInt(26) + 'a');
				input += c;
			}
				System.out.println("Your Randomly Generated letter are");
				System.out.println(input);
		}else if(type.equals("e")){
			//Enter String for letters
			System.out.println("Enter your letters");
			 input = scan.nextLine();
		}

	
		
		
		


		char letters[] = input.toCharArray();



		//Will store in an array list all the words that match the letters

		ArrayList<String> result = isWordValid(solutions, letters);

		int size = Math.min(100,result.size());



		System.out.println("\nYour highest scoring word is:");

		String biggest ="";
		//int newScore =0;

		for(int i = 0; i < size; i++){
			int newScore =0;
			for(int j=0; j<result.get(i).length();j++)
			if(result.get(i).charAt(j) == 'a'||result.get(i).charAt(j) =='e'||result.get(i).charAt(j) =='i'||result.get(i).charAt(j) =='o'||result.get(i).charAt(j) =='l'||result.get(i).charAt(j) =='n'||result.get(i).charAt(j) =='s'||result.get(i).charAt(j) =='t'||result.get(i).charAt(j) =='r'){
				newScore += 1;
			}
			else if(result.get(i).charAt(j) == 'd' ||result.get(i).charAt(j) == 'g'){
			newScore+=2;
			}else if(result.get(i).charAt(j) =='b' ||result.get(i).charAt(j) =='c' ||result.get(i).charAt(j) =='m'||result.get(i).charAt(j) =='p'){
				newScore+=3;
			}
			else if(result.get(i).charAt(j) =='f' ||result.get(i).charAt(j) =='h' ||result.get(i).charAt(j) =='v'||result.get(i).charAt(j) =='w'||result.get(i).charAt(j) =='y'){
				newScore+=4;
			}
			else if(result.get(i).charAt(j) == 'k'){
				newScore+=5;
			}else if(result.get(i).charAt(j) == 'j' ||result.get(i).charAt(j) == 'x'){
				newScore+=8;
			}else if(result.get(i).charAt(j) == 'z' ||result.get(i).charAt(j) == 'q'){
				newScore+=10;
			}
				
			if(newScore > score ){
				score = newScore;
				biggest = result.get(i);
			}
			
			}
		
		
		System.out.println("- "+biggest);
		System.out.println("Score: " + score);

	}



	// dictionary compares to letters

	public static ArrayList<String> isWordValid(List<String> dic, char[] letters) {

		ArrayList<String> result = new ArrayList<String>();



		

		for(int i = 0; i < dic.size(); i++){

			boolean valid = check(dic.get(i), letters) ;

			if(valid){

				result.add(dic.get(i));

			}

		}

		return result;

	}



	//Checks a string against the letters given

	public static boolean check(String word, char[] letters){
		Hashtable<Character, Integer> table = new Hashtable<Character, Integer>();



		for(int i = 0; i < letters.length; i++){

			char temp = letters[i];

			if(table.get(temp) != null)

				table.put(temp, table.get(temp)+1);

			else

				table.put(temp, 1);

		}



		//checking to see if they're in the table

		for(int i = 0; i < word.length(); i++){

			char temp = word.charAt(i);



			// if you find it in the table

			if(table.get(temp) != null && table.get(temp) > 0)
				//
							table.put(temp, table.get(temp)-1);

						else

								return false;

						}

		return true;

	}

} 



