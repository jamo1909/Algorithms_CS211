//This Program does not fully work as the number of inputs increased it does not sort properly
//This Sorts all words by greatest character by Quicksort
import java.util.*;

public class quickSort {
	public static void main(String[] args) {
		
		Scanner scan = new Scanner(System.in);
		String y [] = new String[3];
		int x [] = new int [3];
		
		for(int i =0; i < x.length;i++)
		{
			String string = scan.nextLine();
			y [i] = string;
			int greatest =0;
			for(int z=0; z < y[i].length();z++)
			{
				
				int pointer1 = (int)y[i].charAt(z);	 
				
				if(pointer1 > greatest)
				{
					greatest = pointer1;
				}
				
			}
			x[i] = greatest;
		}
		
	
		for(int i =0; i<x.length;i++)
		System.out.print(x[i] + "=" + y[i] + " ");
 
		System.out.println(" ");
		int low = 0;
		int high = x.length - 1;
 
		quickSort(x, low, high ,y);
		//System.out.println(Arrays.toString(x));
		
		
	
		System.out.println(" ");
		for(int i =x.length-1; i>=0;i--)
		{
			System.out.print(x[i]+ "=" +y[i] + " ");
		}
		
	}
 
	public static void quickSort(int[] arr, int low, int high , String []y) {
		if (arr == null || arr.length == 0)
			return;
 
		if (low >= high)
			return;
 
		// pick the pivot
		int middle = low + (high - low) / 2;
		int pivot = arr[middle];
 
		// make left < pivot and right > pivot
		int i = low, j = high;
		while (i <= j) {
			while (arr[i] < pivot) {
				i++;
			}
 
			while (arr[j] > pivot) {
				j--;
			}
 
			if (i <= j) {
				int temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
				
				String temp2 = y[i];
				y[i] = y[j];
				y[j] = temp2;
				i++;
				j--;
			}
		}
 
		// recursively sort two sub parts
		if (low < j)
			quickSort(arr, low, j, y);
 
		if (high > i)
			quickSort(arr, i, high, y);
	}
}
